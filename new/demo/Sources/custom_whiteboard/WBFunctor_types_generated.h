/**
 *  /file WBFunctor_types_generated.h
 *
 *  Created by Carl Lusty in 2013.
 *  Copyright (c) 2013-2016 Carl Lusty and Rene Hexel
 *  All rights reserved.
 */

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wpadded"
#pragma clang diagnostic ignored "-Wold-style-cast"

//Generated on: Tue Sep 19 06:45:41 2017
//Generated by user: callum

#ifdef wb_demo_DEFINED
        
        /**
        * WBFunctor definition for Demo_WBFunctor_T
        */
template <typename Demo_WBFunctor_T >
class Demo_WBFunctor: public WBFunctor<Demo_WBFunctor_T > 
{
public:
        
        /**
        * WBFunctor constructor for Demo_WBFunctor_T
        */
        Demo_WBFunctor(Demo_WBFunctor_T* obj, void (Demo_WBFunctor_T::*pFunc) (guWhiteboard::WBTypes, guWhiteboard::wb_demo &), guWhiteboard::WBTypes t): WBFunctor<Demo_WBFunctor_T >(obj, (void (Demo_WBFunctor_T::*) (guWhiteboard::WBTypes, gu_simple_message*))pFunc, t) { }

        
        /**
        * call method for callbacks, for class Demo_WBFunctor_T
        */
        void call(gu_simple_message *m)
        {
                guWhiteboard::wb_demo result = guWhiteboard::Demo_t().get_from(m);
                Demo_function_t funct((void (Demo_WBFunctor_T::*)(guWhiteboard::WBTypes, guWhiteboard::wb_demo &))WBFunctor<Demo_WBFunctor_T >::get_s_func_ptr());
                (WBFunctor<Demo_WBFunctor_T >::fObject->*funct)(WBFunctor<Demo_WBFunctor_T >::type_enum, result);
        }
        
        /**
        * define callback signature
        */
        typedef void (Demo_WBFunctor_T::*Demo_function_t) (guWhiteboard::WBTypes, guWhiteboard::wb_demo &);

        
        /**
        * internal method of linking classes 
        */
        static WBFunctorBase *bind(Demo_WBFunctor_T *obj, void (Demo_WBFunctor_T::*f)(guWhiteboard::WBTypes, guWhiteboard::wb_demo &), guWhiteboard::WBTypes t) { return new Demo_WBFunctor<Demo_WBFunctor_T >(obj, f, t); }
};

#endif //wb_demo_DEFINED


